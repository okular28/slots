:root {
  font-family: system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;

  color-scheme: light dark;
  color: rgba(255, 255, 255, 0.87);
  background-color: #242424;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;

  /*VARIABLES FOR SLOT ANIMATION*/
  --animationTime: 900ms;
  --animationIterations: infinite;
  --animationDelay: calc(var(--animationTime) / 9);
  --totalAnimationTime: calc(var(--animationIterations)*var(--animationTime));
  --singleCellStep: calc(var(--animationTime)/9);

  /*VARIABLES FOR CELLS*/
  --cellHeight: 100px;
  --cellWidth: 100px;
}

*{
  box-sizing: border-box;
}

body {
  margin: 0;
  display: flex;
  place-items: center;
  min-width: 320px;
  min-height: 100vh;
}

h1 {
  font-size: 3.2em;
  line-height: 1.1;
}

#app {
  max-width: 1280px;
  margin: 0 auto;
  padding: 2rem;
  text-align: center;
}

button {
  border-radius: 8px;
  border: 1px solid transparent;
  padding: 0.6em 1.2em;
  font-size: 1em;
  font-weight: 500;
  font-family: inherit;
  background-color: #1a1a1a;
  cursor: pointer;
  transition: border-color 0.25s;
}
button:hover {
  border-color: #646cff;
}

@media (prefers-color-scheme: light) {
  :root {
    color: #213547;
    background-color: #ffffff;
  }
  a:hover {
    color: #747bff;
  }
  button {
    background-color: #f9f9f9;
  }
}

.machineContainer{
  display: flex;
}

.cell, .machineBorder {
  width: var(--cellWidth);
  height: var(--cellHeight);
  color: #1a1a1a;
}

#animationButton{
  z-index: 40;
}

.cell{
  position: absolute;
  z-index: -1;
  display: flex;
  align-items: center;
  justify-content: center;
  color: #f2a4f0;
  border: 7px groove #f2a4f0;
  background: #cefff5;
  border-collapse: collapse;
}

.wrapper{
  position: relative;
}

.filler{
  height: calc(3*var(--cellHeight));
}

.machineBorder{
  z-index: 15;
  background-color: #242424;
  opacity: 50%;
  height: calc(3*var(--cellHeight));
}

.machineBorder:last-child {
  height: calc(4*var(--cellHeight));
}

/*ANIMATION CLASSES FOR USE IN animationStartStop FUNCTION*/
/*.wrapper.animationClass div:nth-child(n+1) {*/
/*  --stop-position: calc(var(--cellHeight) * (9 - n));*/
/*  animation: spinningAnimation var(--animationTime) linear calc(var(--animationDelay)*(n - 1)) var(--animationIterations), spinEndingAnimation calc((var(--animationTime) / 9) * (9 - n)) linear calc(var(--totalAnimationTime) + var(--singleCellStep) * (n - 1)) 1 forwards;*/
/*}*/

.wrapper.pauseClass div{
  animation-play-state: paused !important;
}

.wrapper.animationClass div:first-child {
  animation: spinningAnimation var(--animationTime) linear 0s var(--animationIterations);
}

.wrapper.animationClass div:nth-child(2) {
  animation: spinningAnimation var(--animationTime) linear var(--animationDelay) var(--animationIterations);
}

.wrapper.animationClass div:nth-child(3) {
  animation: spinningAnimation var(--animationTime) linear calc(var(--animationDelay)*2) var(--animationIterations);
}
.wrapper.animationClass div:nth-child(4) {
  animation: spinningAnimation var(--animationTime) linear calc(var(--animationDelay)*3) var(--animationIterations);
}
.wrapper.animationClass div:nth-child(5) {
  animation: spinningAnimation var(--animationTime) linear calc(var(--animationDelay)*4) var(--animationIterations);
}
.wrapper.animationClass div:nth-child(6) {
  animation: spinningAnimation var(--animationTime) linear calc(var(--animationDelay)*5) var(--animationIterations);
}
.wrapper.animationClass div:nth-child(7) {
  animation: spinningAnimation var(--animationTime) linear calc(var(--animationDelay)*6) var(--animationIterations);
}
.wrapper.animationClass div:nth-child(8) {
  animation: spinningAnimation var(--animationTime) linear calc(var(--animationDelay)*7) var(--animationIterations);
}
.wrapper.animationClass div:nth-child(9) {
  animation: spinningAnimation var(--animationTime) linear calc(var(--animationDelay)*8) var(--animationIterations);
}

@keyframes spinningAnimation {
  0% {
    transform: translate(0, 0px);
  }
  100% {
    transform: translate(0, calc(var(--cellHeight)*9));
  }
}

/*@keyframes spinEndingAnimation {*/
/*  0% {*/
/*    transform: translate(0, 0px);*/
/*  }*/
/*  100% {*/
/*    transform: translate(0, var(--stop-position));*/
/*  }*/
/*}*/
